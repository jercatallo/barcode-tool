module.exports = {
  root: true,
  env: {
    node: true,
    es2022: true,
  },
  extends: ['eslint:recommended', 'plugin:@typescript-eslint/recommended'],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 2022,
    sourceType: 'module',
  },
  overrides: [
    {
      files: ['src/**/*.ts'],
      rules: {
        "@typescript-eslint/no-explicit-any": "off",
        "eol-last": ["error", "always"],
        "semi": ["error", "always"],
        // "no-unused-vars": ["error", { "vars": "all", "args": "after-used", "ignoreRestSiblings": false }],
        // "quotes": ["error", "single", { "avoidEscape": true }],
        "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1, "maxBOF": 0 }],
        // "no-trailing-spaces": "error",
        // "object-curly-spacing": ["error", "always"],
        "array-bracket-spacing": ["error", "never"],
        "arrow-spacing": ["error", { "before": true, "after": true }],
        "comma-dangle": ["error", "always-multiline"],
        // "no-console": "warn", // Consider using "error" in production builds
        "no-debugger": "error",
        "no-alert": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-else-return": "error",
        "no-empty-function": "error",
        "no-eval": "error",
        "no-implied-eval": "error",
        "no-multi-spaces": "error",
        "no-multi-str": "error",
        "no-new-func": "error",
        "no-new-object": "error",
        "no-new-wrappers": "error",
        "no-redeclare": "error",
        "no-return-assign": ["error", "always"],
        "no-useless-concat": "error",
        "no-useless-return": "error",
        "no-void": "error",
        "no-with": "error",
        "space-before-function-paren": ["error", "never"],
        "spaced-comment": ["error", "always"],
        "prefer-const": "error",
        "prefer-template": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "rest-spread-spacing": ["error", "never"]
      },
    },
  ],
};
